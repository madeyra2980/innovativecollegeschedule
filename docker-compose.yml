services:
  # MongoDB база данных
  mongodb:
    image: mongo:6.0
    container_name: innovativecollege-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: innovativecollege
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - college-network

  # Backend API (Go)
  backend:
    build:
      context: ./innovativecollege
      dockerfile: Dockerfile
    container_name: innovativecollege-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/innovativecollege?authSource=admin
      DATABASE_NAME: innovativecollege
      PORT: 8080
    depends_on:
      - mongodb
    networks:
      - college-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Admin Panel (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: innovativecollege-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - college-network

  # Schedule Viewer (React TypeScript)
  schedule-app:
    build:
      context: ./schedule-app
      dockerfile: Dockerfile
    container_name: innovativecollege-schedule
    restart: unless-stopped
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - college-network

volumes:
  mongodb_data:
    driver: local

networks:
  college-network:
    driver: bridge
